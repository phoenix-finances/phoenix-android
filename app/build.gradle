apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

static def getDate() {
    def date = new Date()
    //def formattedDate = date.format('yyyyMMddHHmmss')
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

android {
    namespace "com.ornoma.phoenix"
    compileSdk 33

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        //APP_VERSION is the global version, we don't change it with each update,
        //rather its only incremented when major changes are done
        def APP_VERSION = 1;

        //Increment VERSION_CODE when you need to update the app in play store
        def VERSION_CODE = 1;

        defaultConfig {
            applicationId "com.ornoma.phoenix"
            minSdkVersion 21
            targetSdkVersion 33

            versionCode VERSION_CODE
            versionName APP_VERSION + "." + VERSION_CODE + "." + getDate() + "." + versionBuild
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            multiDexEnabled true
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    /*signingConfigs {
        debug {
            storeFile file('key_file.jks')
            keyAlias ''
            keyPassword ''
            storePassword ''
        }
    }*/
}

repositories {

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //The Event Bus
    //http://greenrobot.org/eventbus/documentation/how-to-get-started/

    implementation('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev72-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    //https://github.com/prolificinteractive/material-calendarview


    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.android.gms:play-services-auth:10.2.6'
    implementation 'com.google.android.gms:play-services-drive:10.2.6'
    //implementation 'pub.devrel:easypermissions:0.2.1'
    implementation 'com.prolificinteractive:material-calendarview:1.4.3'

    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-config'
    //implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-storage'

    //https://github.com/whilu/AndroidTagView
    //implementation 'co.lujun:androidtagview:1.1.3'
    implementation 'org.ornoma.libandroid:androidtagview:1.0.1'

    testImplementation 'junit:junit:4.12'

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //Material
    implementation ("com.google.android.material:material:1.0.0")

    // Retrofit and OkHttp
    // OkHttp interceptors for logging
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "com.squareup.okhttp3:okhttp:3.12.1"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:3.8.1"
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.1"
}

apply plugin: 'com.google.gms.google-services'
